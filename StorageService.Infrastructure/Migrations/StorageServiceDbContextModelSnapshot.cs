// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StorageService.Infrastructure.Data;

#nullable disable

namespace StorageService.Infrastructure.Migrations
{
    [DbContext(typeof(StorageServiceDbContext))]
    partial class StorageServiceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StorageService.Domain.Entities.Advertisement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Advertisements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2023, 9, 6, 22, 30, 40, 295, DateTimeKind.Local).AddTicks(9067),
                            Description = "This is a detailed description of the first item.",
                            ImageUrl = "http://example.com/image1.jpg",
                            Price = 100.50m,
                            Title = "First Item"
                        },
                        new
                        {
                            Id = 2,
                            DateCreated = new DateTime(2023, 9, 6, 22, 30, 40, 295, DateTimeKind.Local).AddTicks(9114),
                            Description = "This is a detailed description of the second item.",
                            ImageUrl = "http://example.com/image2.jpg",
                            Price = 250.00m,
                            Title = "Second Item"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
